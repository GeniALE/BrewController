name: Build release assets

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.*

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build_backend:
    runs-on: ubuntu-20.04
    name: Build backend
    steps:
      - uses: actions/checkout@v2

      - name: Publish artifacts
        run: dotnet publish ${{ github.workspace }}/backend/BrewController.csproj -c Release -r linux-arm64 -o ${{ github.workspace }}/release/backend --self-contained true

      - name: Archive artifacts
        run: tar -czvf ${{ github.workspace }}/backend.tar.gz -C ${{ github.workspace }}/release backend

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend
          if-no-files-found: error
          path: ${{ github.workspace }}/backend.tar.gz

  build_frontend:
    runs-on: ubuntu-20.04
    name: Build frontend
    defaults:
      run:
        working-directory: ${{ github.workspace }}/frontend
    steps:
      - uses: actions/checkout@v2

      - name: Install npm dependencies
        run: npm install

      - name: Build artifacts
        run: |
          npm run build
          mkdir -p ${{ github.workspace }}/release/frontend
          cp -r ./public ${{ github.workspace }}/release/frontend

      - name: Archive artifacts
        run: tar -czvf ${{ github.workspace }}/frontend.tar.gz -C ${{ github.workspace }}/release frontend

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          if-no-files-found: error
          path: ${{ github.workspace }}/frontend.tar.gz

  create_release:
    runs-on: ubuntu-20.04
    name: Create release
    needs: [ build_backend, build_frontend ]
    steps:
    - name: Set environment variables
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Setup
      run: |
        mkdir artifacts
        mkdir -p release/brewcontroller-${{ env.RELEASE_VERSION }}

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Deflate artifacts
      run: |
        tar xf artifacts/frontend.tar.gz -C release/brewcontroller-${{ env.RELEASE_VERSION }}
        tar xf artifacts/backend.tar.gz -C release/brewcontroller-${{ env.RELEASE_VERSION }}

    - name: Archive artifacts
      run: tar -czvf brewcontroller-${{ env.RELEASE_VERSION }}.tar.gz -C release brewcontroller-${{ env.RELEASE_VERSION }}

    - name: Upload release artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: brewcontroller-${{ env.RELEASE_VERSION }}.tar.gz


